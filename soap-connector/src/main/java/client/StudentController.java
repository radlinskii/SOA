
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentController", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentController {


    /**
     * 
     * @param newSemester
     * @param newAvatar
     * @param studentCardId
     * @param newName
     * @param newCourses
     * @param newFaculty
     * @param newStudentCardId
     * @return
     *     returns client.Student
     */
    @WebMethod
    @WebResult(name = "Student", targetNamespace = "")
    @RequestWrapper(localName = "editStudent", targetNamespace = "http://soap/", className = "client.EditStudent")
    @ResponseWrapper(localName = "editStudentResponse", targetNamespace = "http://soap/", className = "client.EditStudentResponse")
    public Student editStudent(
        @WebParam(name = "studentCardId", targetNamespace = "")
        int studentCardId,
        @WebParam(name = "newName", targetNamespace = "")
        String newName,
        @WebParam(name = "newStudentCardId", targetNamespace = "")
        Integer newStudentCardId,
        @WebParam(name = "newFaculty", targetNamespace = "")
        String newFaculty,
        @WebParam(name = "newSemester", targetNamespace = "")
        Integer newSemester,
        @WebParam(name = "newCourses", targetNamespace = "")
        List<String> newCourses,
        @WebParam(name = "newAvatar", targetNamespace = "")
        byte[] newAvatar);

    /**
     * 
     * @param courses
     * @param studentCardId
     * @param name
     * @param semester
     * @param avatar
     * @param faculty
     * @return
     *     returns client.Student
     */
    @WebMethod
    @WebResult(name = "Student", targetNamespace = "")
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://soap/", className = "client.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://soap/", className = "client.AddStudentResponse")
    public Student addStudent(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "studentCardId", targetNamespace = "")
        int studentCardId,
        @WebParam(name = "faculty", targetNamespace = "")
        String faculty,
        @WebParam(name = "semester", targetNamespace = "")
        int semester,
        @WebParam(name = "courses", targetNamespace = "")
        List<String> courses,
        @WebParam(name = "avatar", targetNamespace = "")
        byte[] avatar);

    /**
     * 
     * @param studentCardId
     * @return
     *     returns client.Student
     */
    @WebMethod
    @WebResult(name = "Student", targetNamespace = "")
    @RequestWrapper(localName = "getStudentById", targetNamespace = "http://soap/", className = "client.GetStudentById")
    @ResponseWrapper(localName = "getStudentByIdResponse", targetNamespace = "http://soap/", className = "client.GetStudentByIdResponse")
    public Student getStudentById(
        @WebParam(name = "studentCardId", targetNamespace = "")
        int studentCardId);

    /**
     * 
     * @param facultyFilter
     * @param courseFilter
     * @return
     *     returns client.ListResponse.StudentList
     */
    @WebMethod
    @WebResult(name = "StudentList", targetNamespace = "")
    @RequestWrapper(localName = "list", targetNamespace = "http://soap/", className = "client.List")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://soap/", className = "client.ListResponse")
    public client.ListResponse.StudentList list(
        @WebParam(name = "facultyFilter", targetNamespace = "")
        String facultyFilter,
        @WebParam(name = "courseFilter", targetNamespace = "")
        String courseFilter);

}
